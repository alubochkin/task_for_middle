{"version":3,"sources":["components/HOC/Layouts.js","components/Slider.js","App.js","redux/action.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["Layout","Div","styled","div","className","this","props","children","Component","Slider","useState","move","setMove","length","images","stiles","color","transform","onClick","prev","style","map","image","index","alt","src","Wrapper","attrs","FlatCard","App","dispatch","useDispatch","useEffect","flats","flatsJSON","response","type","payload","getFlatsAc","useSelector","state","liked","likes","flat","id","indexOf","like","likeHendler","some","el","attributes","title","rooms","area","unit","address","city","street","house","room","relationships","first_name","last_name","middle_name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GET_FLATS","LIKE","REMOVE_LIKE","initState","store","createStore","action","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffb57709.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n\r\n    const Div = styled.div`\r\n    height: 100vh;\r\n    max-width: 1200px;\r\n    padding: 0 30px;\r\n    margin: 0 auto;\r\n    padding-top: 30px;\r\n    `\r\n    \r\n\r\n\r\n    return (\r\n      <Div className=''>\r\n        {this.props.children}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;","import React, { useState } from 'react';\r\n\r\nexport default function Slider(props) {\r\n\r\n  const [move, setMove] = useState(0);\r\n\r\n  \r\n  const length = props.images.length;\r\n\r\n\r\n  const moveLeftHendler = () => {\r\n    if(-length !== move - 1) {\r\n      setMove(prev => prev += -1)\r\n    }\r\n  }\r\n\r\n  const moveRightHendler = () => {\r\n    if(move !== 0) {\r\n      setMove(prev => prev += 1)\r\n    }\r\n\r\n  }\r\n\r\n  const stiles = {\r\n    color: 'red',\r\n    transform: `translate( ${move * 100}% )`,\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='slider'>\r\n      <div className='slider--btn'>\r\n        <span onClick={moveLeftHendler}> {'<'} </span>\r\n        <span onClick={moveRightHendler}> {'>'} </span>\r\n      </div>\r\n      <div \r\n        style={stiles}\r\n        className='slider--wrappImage'\r\n      >\r\n        {\r\n          props.images.map((image, index) => {\r\n            return (\r\n              <img \r\n                alt='' \r\n                key={index} \r\n                src={image} />\r\n            )\r\n          \r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from \"styled-components\";\nimport Layout from \"./components/HOC/Layouts\";\nimport Slider from \"./components/Slider\";\nimport flatsJSON from './entities.json';\nimport { addLikeAc, getFlatsAc, removeLikeAc } from './redux/action';\n\nconst Wrapper = styled.div.attrs(() => ({\n  className: \"wrapper\",\n}))`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 30px;\n  justify-content: center;\n  padding-top: 30px;\n`;\nconst FlatCard = styled.div.attrs(() => ({\n    className: \"flat-card\",\n  }))`\n    display: flex;\n    flex-direction: column;\n    box-shadow: 0 0 20px #00000052;\n    color: #e6e6f6;\n    background: #ffffff14;\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n\n`;\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const flats = flatsJSON.response;\n    return dispatch(getFlatsAc(flats))\n  }, [dispatch])\n\n  const flats = useSelector(state => state.flats);\n  const liked = useSelector(state => state.likes);\n\n\n  const likeHendler = (id) => {\n    if(liked.indexOf(id) === -1) {\n      dispatch(addLikeAc(id))\n    } else {\n      dispatch(removeLikeAc(id))\n    }\n  }\n\n  return (\n    <Layout>\n      <Wrapper>\n        {flats?.map(flat => {\n          return(\n            <FlatCard\n              key={flat.id}\n              >\n              <Slider images={flat.images} />\n\n              <button \n                onClick={() => likeHendler(flat.id)}\n                className=\"favorite\">\n                <i\n                  style={liked?.some(el => el === flat.id) ? {color: '#1db4ff'} : null}                  \n                  className=\"material-icons\">favorite</i>\n              </button>\n\n              <h4 className='flat-card--title'>{flat.attributes.title}</h4>\n          \n              <div className='flat-card--attributes'>\n                <p> Комнат: {flat.attributes.rooms}</p>\n                <p>Площадь: {flat.attributes.area} <span> {flat.attributes.unit}</span></p>\n              </div>\n\n              <div className='flat-card--attributes'>\n                <p>Город: {flat.attributes.address.city}</p>\n                <p>\n                  Улица {flat.attributes.address.street} &#160;\n                  дом {flat.attributes.address.house} &#160;\n                  квартира {flat.attributes.address.room}\n                </p>\n              </div>\n\n              <div className='flat-card--relationships'>\n                <p> Контактное лицо: {flat.relationships.type}</p>\n                <p>ФИО: \n                  <span> {flat.relationships.attributes.first_name}</span>\n                  <span> {flat.relationships.attributes.last_name}</span>\n                  <span> {flat.relationships.attributes.middle_name}</span>\n                </p>\n              </div>\n            </FlatCard>\n          )\n        })}\n      </Wrapper>\n    </Layout>\n  );\n}\n\nexport default App;\n","const GET_FLATS = \"GET_FLATS\";\r\nconst LIKE = \"LIKE\";\r\nconst REMOVE_LIKE = \"REMOVE_LIKE\";\r\n\r\nexport const getFlatsAc = (flats) => ({ type: GET_FLATS, payload: flats  });\r\nexport const addLikeAc = (like) => ({ type: LIKE, payload: { like } });\r\nexport const removeLikeAc = (like) => ({ type: REMOVE_LIKE, payload: { like } });","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const GET_FLATS = \"GET_FLATS\";\r\nconst LIKE = \"LIKE\";\r\nconst REMOVE_LIKE = \"REMOVE_LIKE\";\r\n\r\nconst initState = {\r\n  likes: []\r\n}\r\n\r\nexport default function reducer(state = initState, action)  {\r\n\r\n  switch(action.type) {\r\n    case GET_FLATS:\r\n      return { ...state, flats: action.payload };\r\n\r\n    case LIKE:\r\n      return {...state,  likes: [...state.likes, action.payload.like]}\r\n\r\n    case REMOVE_LIKE:\r\n      return {...state,  likes: [...state.likes].filter(id => id !== action.payload.like)}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n    \r\n\r\n}","import {createStore} from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}